{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 710
        },
        "id": "ttZGv1pIta3I",
        "outputId": "1a47ec5e-7cde-42a0-8034-d2c2a0cf1506"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[8, 10, 6, 11, 8, 7, 10, 9, 10, 6, 12, 9]\n",
            "[64, 71, 53, 67, 55, 58, 77, 57, 56, 51, 76, 68]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    crianca  peso  idade  altura\n",
              "0         1    64      8      57\n",
              "1         2    71     10      59\n",
              "2         3    53      6      49\n",
              "3         4    67     11      62\n",
              "4         5    55      8      51\n",
              "5         6    58      7      50\n",
              "6         7    77     10      55\n",
              "7         8    57      9      48\n",
              "8         9    56     10      42\n",
              "9        10    51      6      42\n",
              "10       11    76     12      61\n",
              "11       12    68      9      57"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1aefa063-370c-4cd8-a581-ad949650a7d6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>crianca</th>\n",
              "      <th>peso</th>\n",
              "      <th>idade</th>\n",
              "      <th>altura</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>64</td>\n",
              "      <td>8</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>71</td>\n",
              "      <td>10</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>53</td>\n",
              "      <td>6</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>67</td>\n",
              "      <td>11</td>\n",
              "      <td>62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>55</td>\n",
              "      <td>8</td>\n",
              "      <td>51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>58</td>\n",
              "      <td>7</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>77</td>\n",
              "      <td>10</td>\n",
              "      <td>55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>57</td>\n",
              "      <td>9</td>\n",
              "      <td>48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>56</td>\n",
              "      <td>10</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>51</td>\n",
              "      <td>6</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>76</td>\n",
              "      <td>12</td>\n",
              "      <td>61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>68</td>\n",
              "      <td>9</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1aefa063-370c-4cd8-a581-ad949650a7d6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1aefa063-370c-4cd8-a581-ad949650a7d6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1aefa063-370c-4cd8-a581-ad949650a7d6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "def Filtro(x, y, variavel, key):\n",
        "  lista = []\n",
        "  for i in range(x,y):\n",
        "    lista.append(variavel[key][i])\n",
        "  print(lista)\n",
        "  return lista\n",
        "\n",
        "bd = pd.read_excel('bd01.xlsx')\n",
        "x = np.array(Filtro(0, 12, bd, 'idade'))\n",
        "y = np.array(Filtro(0, 12, bd, 'peso'))\n",
        "display(bd)\n",
        "plt.bar(x, y)\n",
        "\n",
        "plt.show()"
      ]
    }
  ]
}